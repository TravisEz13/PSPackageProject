parameters:
  jobName: TestPkgWin
  imageName: windows-2019
  displayName: PowerShell Core on Windows
  powershellExecutable: pwsh

jobs:
- job: ${{ parameters.jobName }}
  pool:
    vmImage: ${{ parameters.imageName }}
  displayName: ${{ parameters.displayName }}
  steps:
  - ${{ parameters.powershellExecutable }}: |
      Install-module Pester -Force -MaximumVersion 4.99
    displayName: Install dependencies - Pester
    timeoutInMinutes: 10

  - ${{ parameters.powershellExecutable }}: |
      Install-Module -Name "platyPS" -Force
    displayName: Install dependencies - PlatyPS
    timeoutInMinutes: 10

  - ${{ parameters.powershellExecutable }}: |
        Install-Module -Name "PSScriptAnalyzer" -RequiredVersion 1.18.0 -Force
    displayName: Install dependencies
    timeoutInMinutes: 10

  - ${{ parameters.powershellExecutable }}: |
      Install-Module -Name PSPackageProject -Force
    displayName: Install PSPackageProject module

  - ${{ parameters.powershellExecutable }}: |
      Get-InstalledModule -Name pester  -AllVersions | Where-Object {$_.Version -ge ([version]::new(5,0,0))} | Uninstall-Module -Force
    displayName: Remove >= 5.0.0 Pester

  - task: DownloadBuildArtifacts@0
    displayName: 'Download artifacts'
    inputs:
      buildType: current
      downloadType: specific
      itemPattern: '**/*.nupkg'
      downloadPath: '$(System.ArtifactsDirectory)'

  - ${{ parameters.powershellExecutable }}: |
      $sourceName = 'pspackageproject-local-repo'
      Register-PSRepository -Name $sourceName -SourceLocation '$(System.ArtifactsDirectory)' -ErrorAction Ignore
      Save-Package -Name "platyPS","Pester" -Source https://www.powershellgallery.com/api/v2 -Path '$(System.ArtifactsDirectory)' -ProviderName NuGet
      Save-Package -Name "PSScriptAnalyzer" -Source https://www.powershellgallery.com/api/v2 -Path '$(System.ArtifactsDirectory)' -ProviderName NuGet -RequiredVersion 1.18.0
      $rawConfig = Get-Content $env:BUILD_SOURCESDIRECTORY/pspackageproject.json | ConvertFrom-Json
      $buildOutputPath = Join-Path $env:BUILD_SOURCESDIRECTORY $rawConfig.BuildOutputPath
      Write-Verbose -Verbose "buildOutputPath = $buildOutputPath"
      $null = New-Item -ItemType Directory -Path $buildOutputPath -Verbose
      Save-Module -Name PSPackageProject -Repository $sourceName -Force -Verbose -Path $buildOutputPath
    displayName: Extract product artifact
    timeoutInMinutes: 10

  - ${{ parameters.powershellExecutable }}: |
      Import-Module $env:BUILD_SOURCESDIRECTORY/src/PSPackageProject.psd1
      Invoke-PSPackageProjectTest -Type Functional
    displayName: Execute functional tests
    errorActionPreference: continue
    timeoutInMinutes: 10

  - ${{ parameters.powershellExecutable }}: |
      Import-Module $env:BUILD_SOURCESDIRECTORY/src/PSPackageProject.psd1
      Invoke-PSPackageProjectTest -Type StaticAnalysis
    displayName: Execute static analysis tests
    errorActionPreference: continue
    continueOnError: true
    condition: succeededOrFailed()
    timeoutInMinutes: 10

  - ${{ parameters.powershellExecutable }}: |
      Unregister-PSRepository -Name 'pspackageproject-local-repo' -ErrorAction Ignore
    displayName: Unregister temporary PSRepository
    condition: always()
    timeoutInMinutes: 10
